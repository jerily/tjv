# Copyright Jerily LTD. All Rights Reserved.
# SPDX-FileCopyrightText: 2024 Neofytos Dimitriou (neo@jerily.cy)
# SPDX-License-Identifier: MIT.

package require tcltest
namespace import -force ::tcltest::test

package require tjv

source [file join [file dirname [info script]] common.tcl]

test tjvValidateJsonDouble-1.1 {Test without parameters, empty value} -body {
    tjv::validate -type json -properties {{ foo -type double }} {{ "foo": "" }}
} -returnCodes error -result {Error while validating data: .foo should be double}

test tjvValidateJsonDouble-1.2 {Test without parameters, wrong value} -body {
    tjv::validate -type json -properties {{ foo -type double }} {{ "foo": false }}
} -returnCodes error -result {Error while validating data: .foo should be double}

test tjvValidateJsonDouble-1.3 {Test without parameters, integer value as double} -body {
    tjv::validate -type json -properties {{ foo -type double }} {{ "foo": 1 }}
} -result {}

test tjvValidateJsonDouble-1.4 {Test without parameters, null value} -body {
    tjv::validate -type json -properties {{ foo -type double }} {{ "foo": null }}
} -returnCodes error -result {Error while validating data: .foo should be double}

test tjvValidateJsonDouble-1.5 {Test null allowed, null value} -body {
    tjv::validate -type json -properties {{ foo -type double -nullable  }} {{ "foo": null }}
} -result {}

test tjvValidateJsonDouble-1.3 {Test without parameters, correct value} -body {
    tjv::validate -type json -properties {{ foo -type double }} {{ "foo": 123.1 }}
} -result {}

test tjvValidateJsonDouble-2.1 {Test with -minimum, wrong value} -body {
    tjv::validate -type json -properties {{ foo -type double -minimum -10.6 }} {{ "foo": -123 }}
} -returnCodes error -result {Error while validating data: .foo value is less than the minimum -10.600000}

test tjvValidateJsonDouble-2.2 {Test with -minimum, correct value} -body {
    tjv::validate -type json -properties {{ foo -type double -minimum 10 }} {{ "foo": 1024 }}
} -result {}

test tjvValidateJsonDouble-3.1 {Test with -maximum, wrong value} -body {
    tjv::validate -type json -properties {{ foo -type double -maximum 10.004 }} {{ "foo": 10.1 }}
} -returnCodes error -result {Error while validating data: .foo value is greater than the maximum 10.004000}

test tjvValidateJsonDouble-3.2 {Test with -maximum, correct value} -body {
    tjv::validate -type json -properties {{ foo -type double -maximum -20.8 }} {{ "foo": -500.1 }}
} -result {}

test tjvValidateJsonDouble-4.1 {Test with -minimum and -maximum, wrong value} -body {
    tjv::validate -type json -properties {{ foo -type double -minimum 0.7 -maximum 100.0 }} {{ "foo": 0.5 }}
} -returnCodes error -result {Error while validating data: .foo value is less than the minimum 0.700000}

test tjvValidateJsonDouble-4.2 {Test with -minimum and -maximum, correct value} -body {
    tjv::validate -type json -properties {{ foo -type double -minimum -10.123 -maximum 10000000.6 }} {{ "foo": 0.1 }}
} -result {}
